<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 搞研究的蜀黍</title>
    <link>http://shuaimeng.github.io/posts/</link>
    <description>Recent content in Posts on 搞研究的蜀黍</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© Copyright notice</copyright>
    <lastBuildDate>Fri, 20 Aug 2021 07:49:57 +0800</lastBuildDate><atom:link href="http://shuaimeng.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Git学习 1</title>
      <link>http://shuaimeng.github.io/posts/git%E5%AD%A6%E4%B9%A0-1/</link>
      <pubDate>Fri, 20 Aug 2021 07:49:57 +0800</pubDate>
      
      <guid>http://shuaimeng.github.io/posts/git%E5%AD%A6%E4%B9%A0-1/</guid>
      <description>Git是如何储存信息的？ blob  储存信息的最小单元 里面储存具体内容，包含一些meta信息，通过sha1哈希算法 通过键值对进行储存   进行commit之后 形成的文件为tree文件 打印形成快照 内容包括：权限，类型，sha1值，具体文件   head，分支，普通的tag可以简单的理解成为一个指针，指向commit对应的sha1数值
  从head开始，到分支，tag，指向一个指针 然后再到一个commit，对应快照、作者、提交信息等内容 然后，再到tree，包含提交内容的目录结构、文件权限、文件名 blob，一个最小单元，包含的是内容 每个blog，都会通过sha1进行压缩和处理  Git结构  git仓库是固化的  </description>
    </item>
    
    <item>
      <title>实验室新建</title>
      <link>http://shuaimeng.github.io/posts/%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%96%B0%E5%BB%BA/</link>
      <pubDate>Thu, 19 Aug 2021 06:44:45 +0800</pubDate>
      
      <guid>http://shuaimeng.github.io/posts/%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%96%B0%E5%BB%BA/</guid>
      <description>3楼的展示平台 三楼的展示平台也经历了很多波折，最近三天每天都遇到一个比较大的问题，但都能最终完善的解决。比如驱动问题，通讯问题，相机出故障等问题。
现在这套东西还是看着不错的。
4楼实验室  双机器人终于搬到楼上了，我叫了叉车来处理，又去叉车师傅那里借了带轮子的撬棒+吊带，靠我们四五个人，就把2个大铁板摆放到位，然后把机器人放上去进行安装固定；   目前的实验室还是比较气派的，机器人大致也有快10台了  机器人   UR5，示范线1台，上汽2台，楼下1台
  UR10，tesla一台
  ABB 1200，1台
  KUKA iiwa，1台
  ABB iiwa，1台
  FANUC，1台
  </description>
    </item>
    
    <item>
      <title>Hugo生成的注意事项</title>
      <link>http://shuaimeng.github.io/posts/test/</link>
      <pubDate>Tue, 17 Aug 2021 08:36:57 +0800</pubDate>
      
      <guid>http://shuaimeng.github.io/posts/test/</guid>
      <description>流程  在github上生成同名仓库 删除public 新建一个md hugo cd public git init git add . git branch -M master 新建一个master git commit -m &#39;&#39; 在github仓库上把pages的分支分配给master git remote add origin git仓库 git push -u origin master  几个问题要注意  重新删除仓库后，注意要在hugo之后，在public文件夹里面，生成一个新的master分支； 最后用-u origin master 注意，github的仓库里，可能没有生成readme的文件，需要手动点击下； 在github的仓库里，设置下page里面，主要读取的是master分支； 注意域名要在域名服务商哪里解析下，然后在github的仓库里写一下；   刚刚还有一个问题：git认为我有东西 ! [rejected] master -&amp;gt; master (fetch first)
error: failed to push some refs to &amp;lsquo;github.com:shuaimeng/shuaimeng.github.io.git&amp;rsquo;
我先git pull，然后他们要求我回答下为什么要pull，我随便写了一点，然后再进行git push -u origin master就没问题了
 </description>
    </item>
    
    <item>
      <title>该博客的第一篇文章</title>
      <link>http://shuaimeng.github.io/posts/first/</link>
      <pubDate>Mon, 16 Aug 2021 22:06:38 +0800</pubDate>
      
      <guid>http://shuaimeng.github.io/posts/first/</guid>
      <description>这里是该博客的第一篇文章。
写于2021年8月16日。
已经不记得这是多少次我使用github类型生成静态网页来做技术类的blog了。
早期还是hexo，现在变成hugo，后者号称速度快很多，使用go语言，但与我有什么关系呢？
hugo比hexo难折腾，有很多小坑。
但我还是闯过来了。
走到这一步，不知道下一步能写多久。
感悟  github的pages页面还是更清爽 多写点东西吧 目前学习qt精神很高 先写到这里 终于搞定了toc，原来在文档前面写下toc就行了  </description>
    </item>
    
  </channel>
</rss>
